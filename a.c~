#include <gtk/gtk.h>
#include <stdio.h>
gint main( int argc,gchar *argv[] )
{
	GtkWidget *separator;
	GtkWidget *window;
	GtkWidget *scrolled_window;
	GtkWidget *fixed;
	GtkWidget *label;

	gtk_init(&argc, &argv);

	window=gtk_window_new(GTK_WINDOW_TOPLEVEL);
	gtk_window_set_title(GTK_WINDOW(window), "process");
	gtk_signal_connect(GTK_OBJECT(window),	"destroy",
	GTK_SIGNAL_FUNC(gtk_main_quit),
	NULL);
	gtk_widget_set_size_request(GTK_WINDOW(window),700,800);
	gtk_window_set_position(GTK_WINDOW(window),GTK_WIN_POS_CENTER);
	gtk_window_set_resizable(GTK_WINDOW(window), 0);

	fixed=gtk_fixed_new();
	gtk_container_add(GTK_CONTAINER(window), fixed);

	scrolled_window=gtk_scrolled_window_new(NULL, NULL);
	gtk_widget_set_usize(scrolled_window, 700,800);
	gtk_fixed_put(GTK_FIXED(fixed), scrolled_window, 200, 5);
	
	
	system("ps -eo user,pid,comm  > list");
	//system("tail process > list");
	gchar *filename,*content;
	gsize bytes;
	GError *error = NULL;
	GtkWidget *cont;
	filename = g_build_filename (g_get_current_dir(), "list", NULL);

	g_file_get_contents (filename, &content, &bytes, &error);
	label=gtk_label_new(NULL);
	gtk_label_set_text(label,content);
	
	gtk_scrolled_window_add_with_viewport( GTK_SCROLLED_WINDOW(scrolled_window),label);
	



	
	gtk_widget_show_all(window);
	gtk_main();
	return 0;
}
